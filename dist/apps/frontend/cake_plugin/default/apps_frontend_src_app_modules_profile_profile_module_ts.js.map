{"version":3,"file":"apps_frontend_src_app_modules_profile_profile_module_ts.js","mappings":"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","sources":["./apps/frontend/src/app/modules/profile/components/profile/profile.component.ts","./apps/frontend/src/app/modules/profile/components/profile/profile.component.html","./apps/frontend/src/app/modules/profile/profile-routing.module.ts","./apps/frontend/src/app/modules/profile/profile.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Watcher } from '../../../../shared/classes/watcher';\nimport { UrlService } from '../../../../services/url.service';\nimport { filter, map, Observable, switchMap, takeUntil, tap } from 'rxjs';\nimport { ModalsService } from '../../../../services/modals.service';\nimport { FormControl } from '@angular/forms';\nimport { ApiService } from '../../../../services/api.service';\n\nimport { AuthService } from '../../../../services/auth.service';\nimport { MapperService } from '../../../../services/mapper.service';\nimport { Query } from '../../../../core/types/query.interface';\nimport { UserProfile } from '@cake/lib-api-interface';\nimport { Theme } from '../../../../core/types/Themes';\nimport { ThemeService } from '../../../../services/theme.service';\n\n\n@Component({\n  selector: 'cake-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent extends Watcher implements OnInit {\n  isProfileOnly = this.activatedRoute.data.pipe(map((data) => {\n    return data['settings'] ? false : true;\n  }))\n  isErrorVisible = this.modalService.hasUsernameExistError$.pipe(map(data => data))\n\n  profileSLices: string[] = []\n  profileNameControl!: FormControl<string>\n  userProfile!: UserProfile\n  profileInfoData: Array<{ label: string; value: number; }> = [];\n\n  mockArrayData = Array(10).fill('')\n\n  readonly QUERY: Query = {\n    page: 1,\n    pageSize: 10,\n  }\n\n  public get activeTheme() : Theme {\n    return this.themeService.active;\n  }\n\n\n  public get profileImg(): string {\n    return this.authService.randomAvatar;\n  }\n\n  constructor(\n    private urlService: UrlService,\n    private activatedRoute: ActivatedRoute,\n    private modalService: ModalsService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private mapper: MapperService,\n    private themeService: ThemeService\n  ) {\n    super()\n  }\n\n  ngOnInit(): void {\n    this.urlService.setPageTitle('profile')\n    this.subscribes()\n  }\n\n  subscribes() {\n    (this.authService.userProfile as Observable<UserProfile>).\n      pipe(\n        filter<UserProfile>(Boolean),\n        takeUntil(this.unsubscribe),\n        tap((data: UserProfile) => {\n          this.userProfile = data;\n          this.profileInfoData = this.mapper.userProfileMapper(this.userProfile);\n          this.profileNameControl = new FormControl(this.userProfile.username) as FormControl<string>;\n        }),\n        switchMap((result: UserProfile) => this.apiService.getUserById(result.id, this.QUERY)),\n        tap(data => {\n          this.profileSLices = data.data.rewards.map(slice => slice.smallImage);\n        }))\n      .subscribe()\n  }\n\n  get isErrorMessageVisible() {\n    return this.userProfile ? this.userProfile.username === this.profileNameControlValue : false\n  }\n\n  onSaveButtonClick() {\n    if (!this.isErrorMessageVisible) {\n      this.modalService.openSettingsConfirmationPopup(this.profileNameControlValue, this.userProfile.id)\n    }\n  }\n\n  get enteredInvalidName() {\n    return this.profileNameControlValue.trim().length === 0\n  }\n\n  get profileNameControlValue() {\n    return this.profileNameControl.value\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"desktop\"></div>\n    <div class=\"mobile\">\n        <div class=\"container\">\n            <div class=\"cakeboxes\">\n                <div class=\"cakebox\" *ngFor=\"let item of userProfile ? profileSLices : mockArrayData\">\n                    <img *ngIf=\"userProfile\" [attr.src]=\"item\" alt=\"\">\n                    <ngx-skeleton-loader *ngIf=\"!userProfile\" [theme]=\"{width: '100%', height: '100%','background-color': activeTheme.properties['--skeleton-color']}\">\n                    </ngx-skeleton-loader>\n                </div>\n            </div>\n            <div class=\"user-info\">\n                <div class=\"profile-info\">\n                    <div class=\"image-section\">\n                        <img *ngIf=\"userProfile\" [attr.src]=\"userProfile.avatar || profileImg\" alt=\"\" class=\"user-icon\">\n                        <ngx-skeleton-loader *ngIf=\"!userProfile\" appearance=\"circle\"\n                            [theme]=\"{width: '88px', height: '88px','background-color': activeTheme.properties['--skeleton-color'], 'margin-left': '8px'}\"></ngx-skeleton-loader>\n                           \n                    </div>\n                    <div class=\"profile-main-info\" *ngIf=\"isProfileOnly | async; else settingsTemplate\">\n                        <span *ngIf=\"userProfile\" class=\"username\">{{userProfile.username}}</span>\n                        <span *ngIf=\"userProfile\" class=\"sugar-amount\">{{userProfile.sugar | number}} Sugar</span>\n                        <ngx-skeleton-loader *ngIf=\"!userProfile\"\n                        count=\"\"\n                        [theme]=\"{width: '90px', height: '17px','background-color': activeTheme.properties['--skeleton-color'], margin: '5px 0 0'}\"></ngx-skeleton-loader>\n                        <ngx-skeleton-loader *ngIf=\"!userProfile\"\n                        count=\"\"\n                        [theme]=\"{width: '90px', height: '17px','background-color': activeTheme.properties['--skeleton-color'], margin: 0}\"></ngx-skeleton-loader>\n                    </div>\n                </div>\n                <div class=\"user-details\">\n                    <div class=\"item\" *ngFor=\"let item of userProfile ? profileInfoData : mockArrayData\">\n                        <span *ngIf=\"userProfile\" class=\"item-name\">{{item.label}}</span>\n                        <span *ngIf=\"userProfile\" class=\"item-amount\">{{item.value | number}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<ng-template #settingsTemplate>\n    <div class=\"profile-settings\">\n        <div class=\"profile-settings-wrapper\" *ngIf=\"userProfile\">\n            <div class=\"profile-settings-input\">\n                <cake-input [control]=\"profileNameControl\"></cake-input>\n            </div>\n            <div class=\"profile-settings-button\">\n                <button class=\"button primary\" [disabled]=\"this.isErrorMessageVisible || enteredInvalidName\"\n                    (click)=\"onSaveButtonClick()\">Save</button>\n            </div>\n        </div>\n        <ngx-skeleton-loader *ngIf=\"!userProfile\" \n            [theme]=\"{\n                width: '100%',\n                height: '49px',\n                'background-color': activeTheme.properties['--skeleton-color']\n            }\">\n        </ngx-skeleton-loader>\n        <span class=\"error-message\" *ngIf=\"isErrorMessageVisible || (isErrorVisible | async)\">Profile name is already in use</span>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent\n  },\n  {\n    path: 'settings',\n    component: ProfileComponent,\n    data: { settings: true }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ConfirmSettingsComponent } from './components/confirm-settings/confirm-settings.component';\n\n\n@NgModule({\n  declarations: [ProfileComponent, ConfirmSettingsComponent],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    SharedModule,\n  ]\n})\nexport class ProfileModule { }\n"],"names":["ActivatedRoute","Watcher","UrlService","filter","map","switchMap","takeUntil","tap","ModalsService","FormControl","ApiService","AuthService","MapperService","ThemeService","i0","ProfileComponent","constructor","urlService","activatedRoute","modalService","apiService","authService","mapper","themeService","data","pipe","hasUsernameExistError$","Array","fill","page","pageSize","activeTheme","active","profileImg","randomAvatar","ngOnInit","setPageTitle","subscribes","userProfile","Boolean","unsubscribe","profileInfoData","userProfileMapper","profileNameControl","username","result","getUserById","id","QUERY","profileSLices","rewards","slice","smallImage","subscribe","isErrorMessageVisible","profileNameControlValue","onSaveButtonClick","openSettingsConfirmationPopup","enteredInvalidName","trim","length","value","selectors","features","decls","vars","consts","template","_r5"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}