{"version":3,"file":"apps_frontend_src_app_modules_confectionery_confectionery_module_ts.js","mappings":"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","sources":["./apps/frontend/src/app/modules/confectionery/confectionery-routing.module.ts","./apps/frontend/src/app/modules/confectionery/confectionery.component.ts","./apps/frontend/src/app/modules/confectionery/confectionery.component.html","./apps/frontend/src/app/modules/confectionery/confectionery.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConfectioneryComponent } from './confectionery.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ConfectioneryComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfectioneryRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { KolItem, RewardEnum, RewardItem, Role, SortRewardEum } from '@cake/lib-api-interface';\nimport { debounceTime, Subject, takeUntil } from 'rxjs';\nimport { Pagination } from '../../core/types/pagination.interface';\nimport { Query } from '../../core/types/query.interface';\nimport { Theme } from '../../core/types/Themes';\nimport { ApiService } from '../../services/api.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ModalsService } from '../../services/modals.service';\nimport { ThemeService } from '../../services/theme.service';\nimport { UrlService } from '../../services/url.service';\nimport { Watcher } from '../../shared/classes/watcher';\n\nenum TypesLists {\n  Slices = 'Slices',\n  Cakeboxes = 'Cakeboxes',\n  Kol = 'Kol',\n}\n\n@Component({\n  selector: 'cake-confectionery',\n  templateUrl: './confectionery.component.html',\n  styleUrls: ['./confectionery.component.scss'],\n})\nexport class ConfectioneryComponent extends Watcher implements OnInit, OnDestroy {\n  typesLists = TypesLists;\n\n  slices: Array<RewardItem> = [];\n\n  cakeboxes: Array<RewardItem> = [];\n\n  users: Array<KolItem> = [];\n\n  scrollSubject = new Subject<{ number: number; type: TypesLists }>();\n\n  slicePagination: Pagination<number> = {\n    page: 1,\n    pageSize: 14,\n    count: 0,\n    data: 0,\n  };\n\n  cakeboxPagination: Pagination<number> = {\n    page: 1,\n    pageSize: 5,\n    count: 0,\n    data: 0,\n  };\n\n  usersPagination: Pagination<number> = {\n    page: 1,\n    pageSize: 5,\n    count: 0,\n    data: 0,\n  };\n\n  get getSliceQueryObj(): Query {\n    return {\n      page: this.slicePagination.page,\n      pageSize: this.slicePagination.pageSize,\n      where: RewardEnum.SLICE,\n      sort: SortRewardEum.CreatedAt,\n      isConfectionary: true,\n    };\n  }\n\n  get getCakeboxQueryObj(): Query {\n    return {\n      page: this.cakeboxPagination.page,\n      pageSize: this.cakeboxPagination.pageSize,\n      where: RewardEnum.CAKEBOX,\n      sort: SortRewardEum.CreatedAt,\n      isConfectionary: true,\n    };\n  }\n\n  get getUsersQueryObj(): Query {\n    return {\n      page: this.usersPagination.page,\n      pageSize: this.usersPagination.pageSize,\n      where: Role.kol,\n    };\n  }\n\n  hiddenSlice = true;\n\n  hiddenCakeboxes = true;\n\n  hiddenKol = true;\n\n  public get getRandomAvatar(): string {\n    return this.authService.randomAvatar;\n  }\n\n  public get activeTheme(): Theme {\n    return this.themeService.active;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    public modalsService: ModalsService,\n    private authService: AuthService,\n    private themeService: ThemeService,\n    private urlService: UrlService\n  ) {\n    super();\n    this.urlService.setPageTitle('confectionary')\n  }\n\n  ngOnInit(): void {\n    this.getSlices(0);\n    this.getCakeboxes(0);\n    this.getUsers(0);\n\n    this.scrollSubject.pipe(debounceTime(100), takeUntil(this.unsubscribe)).subscribe((res) => {\n      if (\n        res.type === TypesLists.Slices &&\n        res.number > this.slicePagination.data &&\n        Math.ceil(this.slicePagination.count / this.slicePagination.pageSize) > this.slicePagination.page\n      ) {\n        this.slicePagination = { ...this.slicePagination, page: this.slicePagination.page + 1 };\n        this.getSlices(res.number);\n      }\n\n      if (\n        res.type === TypesLists.Cakeboxes &&\n        res.number > this.cakeboxPagination.data &&\n        Math.ceil(this.cakeboxPagination.count / this.cakeboxPagination.pageSize) > this.cakeboxPagination.page\n      ) {\n        this.cakeboxPagination = { ...this.cakeboxPagination, page: this.cakeboxPagination.page + 1 };\n        this.getCakeboxes(res.number);\n      }\n\n      if (\n        res.type === TypesLists.Kol &&\n        res.number > this.usersPagination.data &&\n        Math.ceil(this.usersPagination.count / this.usersPagination.pageSize) > this.usersPagination.page\n      ) {\n        this.usersPagination = { ...this.usersPagination, page: this.usersPagination.page + 1 };\n        this.getUsers(res.number);\n      }\n    });\n  }\n\n\n  getMockArray(number: number) {\n    return Array(number);\n  }\n\n  getSlices(number: number) {\n    this.apiService\n      .getRewards(this.getSliceQueryObj)\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe((res) => {\n        this.slices = this.slices.concat(res.data);\n        this.slicePagination = { ...res, data: number };\n      });\n  }\n\n  getCakeboxes(number: number) {\n    this.apiService\n      .getRewards(this.getCakeboxQueryObj)\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe((res) => {\n        this.cakeboxes = this.cakeboxes.concat(res.data);\n        this.cakeboxPagination = { ...res, data: number };\n      });\n  }\n\n  getUsers(number: number) {\n    this.apiService\n      .getUsers(this.getUsersQueryObj)\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe((res) => {\n        this.users = this.users.concat(res.data);\n        this.usersPagination = { ...res, data: number };\n      });\n  }\n\n  onScroll(event: any, type: TypesLists) {\n    const scrollLeft = event.target.scrollWidth - (event.target.parentElement.offsetWidth || 0) - event.target.scrollLeft;\n    if (scrollLeft < 500 && scrollLeft > 0) {\n      this.scrollSubject.next({ number: event.target.scrollLeft, type: type });\n    }\n  }\n\n  getCeilNumber(number: number): number {\n    return Math.ceil(number);\n  }\n\n  get getOffsetWidth(): number {\n    return document.getElementsByTagName('body')[0].offsetWidth;\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n}\n","<div class=\"content\">\n  <!-- <div class=\"shadow-block\"></div> -->\n  <div class=\"wrapper\">\n    <div class=\"title\">\n      <h1>Fresh out of the oven!</h1>\n      <div>\n        <a (click)=\"hiddenSlice = !hiddenSlice\"> {{ hiddenSlice ? 'See all' : 'Hide all' }}({{ slicePagination.count }}) </a\n        ><mat-icon svgIcon=\"arrow-left-blue\"></mat-icon>\n      </div>\n    </div>\n    <div\n      class=\"list\"\n      (scroll)=\"onScroll($event, typesLists.Slices)\"\n      [style]=\"{ overflow: hiddenSlice && getOffsetWidth > 768 ? 'hidden' : 'scroll' }\"\n    >\n      <div class=\"slices big-slices pointer\" *ngIf=\"getOffsetWidth > 768\">\n        <div\n          class=\"slice animation\"\n          *ngFor=\"let slice of slices.length ? slices.slice(0, getCeilNumber(slices.length * 0.4)) : getMockArray(6); let i = index\"\n          (click)=\"slices.length ? modalsService.openRewardPopup(slice.id) : ''\"\n        >\n          <ng-container *ngIf=\"slices.length; else skeletonBigSlice\">\n            <img [attr.src]=\"slice.image\" alt=\"\" />\n            <h4>{{ slice.category }}</h4>\n            <h2>{{ slice.name }}</h2>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"slices small-slices\">\n        <div\n          class=\"slice animation pointer\"\n          *ngFor=\"let slice of slices.length ? (getOffsetWidth > 768 ? slices.slice(getCeilNumber(slices.length * 0.4)): slices) : getMockArray(9); let i = index\"\n          (click)=\"modalsService.openRewardPopup(slice.id)\"\n        >\n          <ng-container *ngIf=\"slices.length; else skeletonSmallSlice\">\n            <img [attr.src]=\"slice.image\" alt=\"\" />\n            <h4>{{ slice.category }}</h4>\n            <h2>{{ slice.name }}</h2>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"wrapper\">\n    <div class=\"title\">\n      <h1>Featured this week</h1>\n      <div>\n        <a (click)=\"hiddenCakeboxes = !hiddenCakeboxes\"> {{ hiddenCakeboxes ? 'See all' : 'Hide all' }}({{ cakeboxPagination.count }}) </a\n        ><mat-icon svgIcon=\"arrow-left-blue\"></mat-icon>\n      </div>\n    </div>\n    <div\n      class=\"list\"\n      (scroll)=\"onScroll($event, typesLists.Cakeboxes)\"\n      [style]=\"{ overflow: hiddenCakeboxes && getOffsetWidth > 768 ? 'hidden' : 'scroll' }\"\n    >\n      <div class=\"cakeboxes\">\n        <div\n          class=\"cakebox animation pointer\"\n          *ngFor=\"let cakebox of cakeboxes.length ? cakeboxes : getMockArray(4); let i = index\"\n          (click)=\"modalsService.openRewardPopup(cakebox.id)\"\n        >\n          <ng-container *ngIf=\"cakeboxes.length; else skeletonCakebox\">\n            <div class=\"box\">\n              <img [attr.src]=\"cakebox.image\" alt=\"\" />\n              <div class=\"cakebox-container\">\n                <cake-cakebox [cakebox]=\"cakebox | cakeboxTransform\"></cake-cakebox>\n              </div>\n            </div>\n            <h4>{{ cakebox.category }}</h4>\n            <h2>{{ cakebox.name }}</h2>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"wrapper\">\n    <div class=\"title\">\n      <h1>Promoted & hot items</h1>\n      <div>\n        <a (click)=\"hiddenKol = !hiddenKol\">\n          {{ hiddenKol ? 'See all' : 'Hide all' }}({{ usersPagination.count }}) <mat-icon svgIcon=\"arrow-left-blue\"></mat-icon\n        ></a>\n      </div>\n    </div>\n    <div\n      class=\"list\"\n      (scroll)=\"onScroll($event, typesLists.Kol)\"\n      [style]=\"{ overflow: hiddenKol && getOffsetWidth > 768 ? 'hidden' : 'scroll' }\"\n    >\n      <div class=\"users\">\n        <ng-container *ngIf=\"users.length; else skeletonKol\">\n          <div class=\"user animation\" *ngFor=\"let user of users; let i = index\" (click)=\"modalsService.openKolPopup(user)\">\n            <div class=\"user-info pointer\">\n              <div class=\"avatar\">\n                <img [attr.src]=\"user.user.avatar || getRandomAvatar\" />\n              </div>\n              <h4>{{ user.user.firstName }} {{ user.user.lastName }}</h4>\n              <h2>{{ user.user.username }}</h2>\n            </div>\n            <div class=\"user-slices\">\n              <div class=\"user-slice pointer\" *ngFor=\"let slice of user.rewards | slice: 0:3\">\n                <div class=\"slice-img\">\n                  <img [attr.src]=\"slice.smallImage || slice.image\" alt=\"\" />\n                </div>\n                <div class=\"slice-info\">\n                  <h4>{{ slice.type }}</h4>\n                  <h2>{{ slice.name }}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <div class=\"banner-wrapper\">\n    <div class=\"flex\">\n      <div class=\"banner\">\n        <img src=\"../../../assets/imgs/banner-how-does-work.png\" alt=\"\" class=\"big-banner\" />\n        <img src=\"../../../assets/imgs/need-sugar.png\" alt=\"\" class=\"small-banner\" />\n        <h2 class=\"small-banner\">Need sugar? Get some here!</h2>\n        <mat-icon svgIcon=\"arrow-left-blue\" class=\"small-banner\"></mat-icon>\n      </div>\n      <div class=\"banner\">\n        <img src=\"../../../assets/imgs/banner-need-sugar.png\" alt=\"\" class=\"big-banner\" />\n        <img src=\"../../../assets/imgs/how-does-work.png\" alt=\"\" class=\"small-banner\" />\n        <h2 class=\"small-banner\">How does this work? Watch tutorial video here.</h2>\n        <mat-icon svgIcon=\"arrow-left-blue\" class=\"small-banner\"></mat-icon>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #skeletonKol>\n  <div class=\"user animation\" *ngFor=\"let item of getMockArray(6)\">\n    <div class=\"user-info pointer\">\n      <div class=\"avatar\">\n        <ngx-skeleton-loader\n          count=\"1\"\n          appearance=\"circle\"\n          animation=\"progress-dark\"\n          [theme]=\"{\n            'background-color': activeTheme.properties['--skeleton-color'],\n            width: '100%',\n            height: '100%',\n            margin: 0\n          }\"\n        >\n        </ngx-skeleton-loader>\n      </div>\n      <ng-container [ngTemplateOutlet]=\"skeletonSmallText\"></ng-container>\n      <br />\n      <ng-container [ngTemplateOutlet]=\"skeletonBigText\"></ng-container>\n    </div>\n    <div class=\"user-slices\">\n      <div class=\"user-slice pointer\" *ngFor=\"let item of getMockArray(3)\">\n        <div class=\"slice-img\">\n          <ngx-skeleton-loader\n            count=\"1\"\n            appearance=\"line\"\n            animation=\"progress-dark\"\n            [theme]=\"{\n              'background-color': activeTheme.properties['--skeleton-color'],\n              width: getOffsetWidth > 768 ? '48px' : '25px',\n              height: getOffsetWidth > 768 ? '48px' : '25px',\n              'border-radius': '2px'\n            }\"\n          >\n          </ngx-skeleton-loader>\n        </div>\n        <div class=\"slice-info\">\n          <ng-container [ngTemplateOutlet]=\"skeletonSmallText\"></ng-container>\n          <br />\n          <ng-container [ngTemplateOutlet]=\"skeletonBigText\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<ng-template #skeletonBigSlice>\n  <ngx-skeleton-loader\n    count=\"1\"\n    appearance=\"line\"\n    animation=\"progress-dark\"\n    [theme]=\"{\n      'background-color': activeTheme.properties['--skeleton-color'],\n      width: '224px',\n      height: '224px',\n      'border-radius': '12px'\n    }\"\n  >\n  </ngx-skeleton-loader>\n  <br />\n  <ng-container [ngTemplateOutlet]=\"skeletonSmallText\"></ng-container>\n  <br />\n  <ng-container [ngTemplateOutlet]=\"skeletonBigText\"></ng-container>\n</ng-template>\n\n<ng-template #skeletonSmallSlice>\n  <div class=\"small-skeleton-slice\">\n    <ngx-skeleton-loader\n    count=\"1\"\n    appearance=\"line\"\n    animation=\"progress-dark\"\n    [theme]=\"{\n      'background-color': activeTheme.properties['--skeleton-color'],\n      width: '100%',\n      height: '100%',\n      'border-radius': '12px',\n      margin: 0\n    }\"\n  >\n  </ngx-skeleton-loader>\n  </div>\n\n  <ng-container [ngTemplateOutlet]=\"skeletonSmallText\"></ng-container>\n  <br />\n  <ng-container [ngTemplateOutlet]=\"skeletonBigText\"></ng-container>\n</ng-template>\n\n<ng-template #skeletonCakebox>\n  <div class=\"box\">\n    <ngx-skeleton-loader\n      count=\"1\"\n      appearance=\"line\"\n      animation=\"progress-dark\"\n      [theme]=\"{\n        'background-color': activeTheme.properties['--skeleton-color'],\n        width: '100%',\n        height: '100%',\n        'border-radius': '12px'\n      }\"\n    >\n    </ngx-skeleton-loader>\n  </div>\n  <br />\n  <ng-container [ngTemplateOutlet]=\"skeletonSmallText\"></ng-container>\n  <br />\n  <ng-container [ngTemplateOutlet]=\"skeletonBigText\"></ng-container>\n</ng-template>\n\n<ng-template #skeletonSmallText>\n  <ngx-skeleton-loader\n    count=\"1\"\n    appearance=\"line\"\n    animation=\"progress-dark\"\n    [theme]=\"{\n      'background-color': activeTheme.properties['--skeleton-color'],\n      width: '50px',\n      height: getOffsetWidth > 768 ? '20px' : '16px',\n      'border-radius': '2px',\n      margin: 0\n    }\"\n  >\n  </ngx-skeleton-loader>\n</ng-template>\n\n<ng-template #skeletonBigText>\n  <ngx-skeleton-loader\n    count=\"1\"\n    appearance=\"line\"\n    animation=\"progress-dark\"\n    [theme]=\"{\n      'background-color': activeTheme.properties['--skeleton-color'],\n      width: '80px',\n      height: getOffsetWidth > 768 ? '30px' : '17px',\n      'border-radius': '2px',\n      margin: 0\n    }\"\n  >\n  </ngx-skeleton-loader>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfectioneryRoutingModule } from './confectionery-routing.module';\nimport { ConfectioneryComponent } from './confectionery.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [ConfectioneryComponent],\n  imports: [CommonModule, ConfectioneryRoutingModule, SharedModule],\n})\nexport class ConfectioneryModule {}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}