{"version":3,"file":"apps_frontend_src_app_modules_main-list_main-list_module_ts.js","mappings":"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","sources":["./apps/frontend/src/app/core/constants/sorting-options.ts","./apps/frontend/src/app/core/constants/tabs-from-list.enum.ts","./apps/frontend/src/app/modules/main-list/main-list-routing.module.ts","./apps/frontend/src/app/modules/main-list/main-list.component.ts","./apps/frontend/src/app/modules/main-list/main-list.component.html","./apps/frontend/src/app/modules/main-list/main-list.module.ts"],"sourcesContent":["import { SortRewardEum, SortUserEum } from \"@cake/lib-api-interface\";\nimport { DropDownOption } from \"../types/drop-down-option.interface\";\n\nexport const kolSortOptions: Array<DropDownOption> = [\n    {\n        value: SortUserEum.Reward,\n        label: 'Rewards'\n    },\n    {\n        value: SortUserEum.Cakebox,\n        label: 'Cakeboxes'\n    },\n    {\n        value: SortUserEum.FollowedByIDs,\n        label: 'Followers'\n    },\n    {\n        value: SortUserEum.Rank,\n        label: 'Rank'\n    },\n    {\n        value: SortUserEum.CreatedAt,\n        label: 'Time in Cak3'\n    },\n    {\n        value: SortUserEum.Role,\n        label: 'Role'\n    },\n]\n\nexport const rewardsSortOptions: Array<DropDownOption> = [\n    {\n        value: SortRewardEum.Cost,\n        label: 'Latest price'\n    },\n    // {\n    //     value: 'hype',\n    //     label: 'Hype'\n    // },\n    // {\n    //     value: 'quality',\n    //     label: 'Quality'\n    // },\n    // {\n    //     value: 'engagement',\n    //     label: 'Engagement'\n    // },\n    {\n        value: SortRewardEum.Rarity,\n        label: 'Rarity'\n    },\n    {\n        value: SortRewardEum.Category,\n        label: 'Category'\n    },\n]","export enum TabsFromListEnum {\n  Kol = 'kol',\n  Brands = 'brands',\n  Events = 'events',\n  Projects = 'projects',\n  Users = 'users',\n  Slices = 'slices',\n  Cak3boxes = 'cak3boxes',\n  Trends = 'trends',\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainListComponent } from './main-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainListComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainListRoutingModule { }\n","/* eslint-disable @nrwl/nx/enforce-module-boundaries */\nimport { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Data, NavigationEnd, Router } from '@angular/router';\nimport { SortRewardEum, SortUserEum } from '@cake/lib-api-interface';\nimport { KolItem, RewardItem } from 'libs/lib-api-interface/src/lib/response';\nimport { BehaviorSubject, debounceTime, takeUntil } from 'rxjs';\nimport { MainListComponentsEnum } from '../../core/constants/main-list-components.enum';\nimport { kolSortOptions, rewardsSortOptions } from '../../core/constants/sorting-options';\nimport { TabsFromListEnum } from '../../core/constants/tabs-from-list.enum';\nimport { DropDownOption } from '../../core/types/drop-down-option.interface';\nimport { Pagination } from '../../core/types/pagination.interface';\nimport { Query } from '../../core/types/query.interface';\nimport { Theme } from '../../core/types/Themes';\nimport { ApiService } from '../../services/api.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ModalsService } from '../../services/modals.service';\nimport { RewardService } from '../../services/reward.service';\nimport { SearchService } from '../../services/search.service';\nimport { ThemeService } from '../../services/theme.service';\nimport { UrlService } from '../../services/url.service';\nimport { Watcher } from '../../shared/classes/watcher';\n\n@Component({\n  selector: 'cake-main-list',\n  templateUrl: './main-list.component.html',\n  styleUrls: ['./main-list.component.scss'],\n})\nexport class MainListComponent extends Watcher implements OnInit, OnDestroy {\n  searchControl = new FormControl('');\n\n  activeTab: TabsFromListEnum = TabsFromListEnum.Kol;\n\n  tabsFromListEnum = TabsFromListEnum;\n\n  mainListComponentsEnum = MainListComponentsEnum;\n\n  waitingLoading = true;\n\n  where = '';\n\n  sortValue = '';\n\n  currentPage = 1;\n\n  pageSize = window.innerWidth <= 768 ? 10 : 5;\n\n  totalCount!: number\n\n  page!: MainListComponentsEnum;\n\n  rewardList: Array<RewardItem> = [];\n\n  kolList: Array<KolItem> = [];\n\n  kolSortOptions: Array<DropDownOption> = kolSortOptions;\n\n  rewardsSortOptions: Array<DropDownOption> = rewardsSortOptions;\n\n  resize$ = new BehaviorSubject<number>(window.innerWidth);\n\n  smallScreen!: boolean;\n    \n  get sortOptions(): Array<DropDownOption> {\n    return this.page === this.mainListComponentsEnum.Rewards ? this.rewardsSortOptions : this.kolSortOptions;\n  }\n\n  get getQueryObj(): Query {\n    return {\n      page: this.currentPage,\n      pageSize: this.pageSize,\n      sort: this.sortValue,\n      search: this.searchControl.value || '',\n      owner: this.smallScreen,\n      ...(!this.smallScreen ? {where: this.where}: {})\n    };\n  }\n\n  get userId(): string {\n    return this.authService.getDecodedToken()?.data.id || '';\n  }\n\n  \n  public get profileImg() : string {\n    return this.authService.randomAvatar;\n  }\n  \n  \n  public get activeTheme() : Theme {\n    return this.themeService.active;\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize$.next(window.innerWidth)\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiService: ApiService,\n    private urlService: UrlService,\n    private searchService: SearchService,\n    private authService: AuthService,\n    public modalsService: ModalsService,\n    private themeService: ThemeService,\n    private rewardService: RewardService\n\n  ) {\n    super();\n    this.searchService.setFormControl(this.searchControl);\n  }\n\n  ngOnInit(): void {\n    this.activeTab = this.route.snapshot.paramMap.get('id') as TabsFromListEnum;\n    this.where = this.activeTab;\n    this.resize$.next(window.innerWidth)\n    this.checkDataFromRouter();\n    this.triggerTabs();\n    this.resizeChecker();\n    this.searching();\n    this.toConfectionaryChecker();\n  }\n\n  toConfectionaryChecker() {\n      this.rewardService.toConfectionaryTrigger.pipe(takeUntil(this.unsubscribe)).subscribe(() => {\n        this.getData();\n      })\n  };\n\n  resizeChecker() {\n    this.resize$.pipe(debounceTime(250)).subscribe(width => {\n        this.smallScreen = width <= 768;\n        this.getData();\n    })\n  }\n\n  getMockArray(number: number) {\n    return Array(number);\n  }\n\n  getNameBasedOnTab(): string {\n    switch (this.activeTab) {\n      case TabsFromListEnum.Kol:\n        return 'User name';\n      case TabsFromListEnum.Users:\n        return 'User name';\n      case TabsFromListEnum.Slices:\n        return 'Slice name';\n      case TabsFromListEnum.Cak3boxes:\n        return 'Cak3boxes name';\n      case TabsFromListEnum.Trends:\n        return 'Item name';\n    }\n    return 'Name';\n  }\n\n  searching() {\n    this.searchControl.valueChanges\n      .pipe(takeUntil(this.unsubscribe), debounceTime(500))\n      .subscribe(() => {\n        this.getData()\n      });\n  }\n\n  checkDataFromRouter() {\n    this.route.data\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe((resolved: Data) => {\n        this.page = resolved['page'];\n        this.urlService.setPageTitle(resolved['page']);\n        this.getData();\n      });\n  }\n\n  setPagination(res: Pagination<unknown>) {\n    this.totalCount = res.count;\n    this.currentPage = res.page;\n    this.pageSize = res.pageSize;\n    this.waitingLoading = false;    \n  }\n\n  getData() {\n    this.waitingLoading = true;\n    if (this.page === MainListComponentsEnum.Grab) {\n      this.sortValue = this.sortValue || SortUserEum.CreatedAt;\n      this.apiService\n        .getUsers(this.getQueryObj)\n        .pipe(takeUntil(this.unsubscribe))\n        .subscribe((res) => {\n          this.kolList = res.data;\n          this.setPagination(res);\n\n        });\n    } else {\n      this.sortValue = this.sortValue || SortRewardEum.Cost;\n      this.apiService\n        .getRewards(this.getQueryObj)\n        .pipe(takeUntil(this.unsubscribe))\n        .subscribe((res) => {\n          this.rewardList = res.data;\n          this.setPagination(res);\n        });\n    }\n  }\n\n  triggerTabs() {\n    this.router.events.subscribe((val) => {\n      if (val instanceof NavigationEnd) {\n        this.activeTab = val.url.split('/')[\n          val.url.split('/').length - 1\n        ] as TabsFromListEnum;\n        if (!Object.values(MainListComponentsEnum).includes(this.activeTab as unknown as MainListComponentsEnum)) {\n          this.where = this.activeTab;\n        }\n        this.checkDataFromRouter();\n      }\n    });\n  }\n\n  sort(option: DropDownOption) {\n    this.sortValue = option.value;\n    this.getData();\n  }\n\n  notAllowedTabs(tabs: TabsFromListEnum[]): boolean {\n    return !tabs.includes(this.activeTab);\n  }\n\n  follow(id: string) {\n    this.apiService.follow(id).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n      this.kolList = this.kolList.map(kol => kol.user.id === id ? {...kol, ...{user: {...kol.user, isFollow: true}, followers: kol.followers + 1}} : kol)\n    })\n  }\n\n  unfollow(id: string) {\n    this.apiService.unfollow(id).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n      this.kolList = this.kolList.map(kol => kol.user.id === id ? {...kol, ...{user: {...kol.user, isFollow: false}, followers: kol.followers - 1}} : kol)\n    })\n  }\n\n  override ngOnDestroy(): void {\n    //  this.urlService.unsubscribeObsv()\n\n    super.ngOnDestroy();\n  }\n\n}\n","<div class=\"content\">\n  <div class=\"desktop-container\">\n    <div class=\"title\">\n      <h1>\n        {{ page === mainListComponentsEnum.Grab ? 'Grab a slice!' : 'Rewards' }}\n      </h1>\n      <img *ngIf=\"page === mainListComponentsEnum.Grab\" src=\"../../../assets/imgs/victory-hand-skin.png\" alt=\"\" />\n      <img *ngIf=\"page === mainListComponentsEnum.Rewards\" src=\"../../../assets/imgs/growing-heart.png\" alt=\"\" />\n    </div>\n\n    <div class=\"header-of-table\">\n      <div class=\"tabs\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n        <a routerLink=\"/rewards/SLICE\" routerLinkActive=\"active\">Slices</a>\n        <a routerLink=\"/rewards/CAKEBOX\" routerLinkActive=\"active\">Cak3boxes</a>\n        <a routerLink=\"/rewards/TREND\" routerLinkActive=\"active\">Trends</a>\n      </div>\n\n      <div class=\"tabs\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n        <a routerLink=\"/grab-a-slice/KOL\" routerLinkActive=\"active\">Key opinion leader</a>\n        <!-- <a routerLink=\"/grab-a-slice/brands\" routerLinkActive=\"active\">Brands</a>\n                <a routerLink=\"/grab-a-slice/events\" routerLinkActive=\"active\">Events</a>\n                <a routerLink=\"/grab-a-slice/projects\" routerLinkActive=\"active\">Projects</a> -->\n        <a routerLink=\"/grab-a-slice/USER\" routerLinkActive=\"active\">Users</a>\n      </div>\n\n      <div class=\"last-content\">\n        <div class=\"sort-block\">\n          <h3>Sort by</h3>\n          <div class=\"sort\">\n            <cake-drop-down\n              placeholder=\"Select\"\n              [options]=\"page === mainListComponentsEnum.Grab ? kolSortOptions : rewardsSortOptions\"\n              (chooseOption)=\"sort($event)\"\n            >\n            </cake-drop-down>\n          </div>\n        </div>\n\n        <div class=\"search-block\">\n          <cake-input id=\"search-input\" placeholder=\"Search\" [control]=\"searchControl\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M10.3636 3C8.90722 3 7.48354 3.43187 6.2726 4.24099C5.06167 5.05011 4.11786 6.20015 3.56052 7.54567C3.00319 8.89119 2.85737 10.3718 3.14149 11.8002C3.42562 13.2286 4.12693 14.5406 5.15675 15.5704C6.18657 16.6003 7.49863 17.3016 8.92703 17.5857C10.3554 17.8698 11.836 17.724 13.1815 17.1667C14.527 16.6093 15.6771 15.6655 16.4862 14.4546C17.2953 13.2437 17.7272 11.82 17.7272 10.3636C17.7271 8.41069 16.9512 6.5378 15.5703 5.15688C14.1894 3.77597 12.3165 3.00012 10.3636 3V3Z\"\n                stroke=\"black\"\n                stroke-miterlimit=\"10\"\n              />\n              <path d=\"M15.8574 15.8573L21.0001 21\" stroke=\"black\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" />\n            </svg>\n          </cake-input>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"list-block\">\n      <div class=\"row header\">\n        <div class=\"col user\">\n          {{ getNameBasedOnTab() }}\n        </div>\n        <div class=\"col rarity\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n          Rarity\n          <!-- <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"\n              'Cosmetics, slices, sugar have rarity'\n            \"\n          /> -->\n        </div>\n        <div class=\"col category\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n          Category\n          <!-- <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"\n              'Cosmetics, slices, sugar have rarity'\n            \" \n          /> -->\n        </div>\n        <div class=\"col latest-price\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n          Latest price\n          <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"'The latest cost of slices/cakeboxes'\"\n          />\n        </div>\n        <div class=\"col rewards\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n          Rewards\n          <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"'Are cosmetics, slices, sugar that user can get for doing a given task.'\"\n          />\n        </div>\n        <div class=\"col cakeboxes\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n          Cakeboxes\n          <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"'Are boxes, that can contain cosmetics, slices or sugar.'\"\n          />\n        </div>\n        <div class=\"col followers\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users]) && page === mainListComponentsEnum.Grab\">\n          Followers\n          <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"'Quantity of users that following KOL/Brand/Project.'\"\n          />\n        </div>\n        <div class=\"col platforms\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users]) && page === mainListComponentsEnum.Grab\">\n          Platforms\n          <img\n            src=\"../../../assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"'Quantity of media platforms connected to cak3 plugin.'\"\n          />\n        </div>\n        <div\n          class=\"col\"\n          [ngClass]=\"page === mainListComponentsEnum.Grab ? 'follow' : 'confectionary'\"\n          *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\"\n        >\n          {{ page === mainListComponentsEnum.Grab ? 'Follow' : 'Confectionary' }}\n        </div>\n      </div>\n      <ng-container *ngIf=\"page === mainListComponentsEnum.Grab\">\n        <ng-container *ngIf=\"!waitingLoading; else skeletonKolDesktop\">\n          <div class=\"row list animation-hidden-skeleton\" *ngFor=\"let item of kolList\">\n            <div class=\"col user\" (click)=\"modalsService.openKolPopup(item)\">\n              <div class=\"avatar\">\n                <img [attr.src]=\"item.user.avatar || profileImg\" [attr.alt]=\"item.user.username\" />\n              </div>\n              <h2>\n                {{ item.user.username }}\n              </h2>\n            </div>\n            <div class=\"col rewards\">\n              <div class=\"slices\">\n                <img [attr.src]=\"reward.smallImage || reward.image\" *ngFor=\"let reward of item.rewards | slice: 0:3; let i = index\" />\n              </div>\n              <div class=\"count\">{{ item.rewards.length > 3 ? '+' : '' }}{{ item.rewards.length > 3 ? item.rewards.length - 3 : '' }}</div>\n            </div>\n            <div class=\"col cakeboxes\">\n              <div class=\"cakebox\" *ngFor=\"let cakebox of item.cakeboxes | slice: 0:3; let i = index\">\n                <cake-cakebox [isSmall]=\"true\" [cakebox]=\"cakebox\"></cake-cakebox>\n              </div>\n              <div class=\"count\">\n                {{ item.cakeboxes.length > 3 ? '+' : '' }}{{ item.cakeboxes.length > 3 ? item.cakeboxes.length - 3 : '' }}\n              </div>\n            </div>\n            <div class=\"col followers rankExample\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\" [innerHTML]=\"item.followers | followersCount\">\n            </div>\n            <div class=\"col platforms\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\">\n              <div class=\"platform\" *ngFor=\"let platform of item.platforms | slice: 0:5; let i = index\">\n                <img src=\"../../../assets/icons/popular-fire.png\" alt=\"popular\" class=\"popular\" *ngIf=\"platform.isPopular\" />\n                <img src=\"../../../assets/platforms/{{ platform.platform }}-small.svg\" alt=\"\" class=\"platform-icon\" />\n              </div>\n              <div class=\"count\">\n                {{ item.platforms.length > 5 ? '+' : '' }}{{ item.platforms.length > 5 ? item.platforms.length - 5 : '' }}\n              </div>\n            </div>\n            <div class=\"col follow\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\">\n              <button\n                class=\"button primary\"\n                *ngIf=\"!item.user.isFollow\"\n                (click)=\"follow(item.user.id)\"\n                [disabled]=\"userId === item.user.id\"\n              >\n                Follow\n              </button>\n              <button\n                class=\"button secondary unfollow with-icon\"\n                *ngIf=\"item.user.isFollow\"\n                (click)=\"unfollow(item.user.id)\"\n                [disabled]=\"userId === item.user.id\"\n              >\n                <span class=\"isFollow\">Following</span>\n                <span class=\"isUnfollow\">Unfollow</span>\n                <span class=\"icon\"></span>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n\n      </ng-container>\n      <ng-container *ngIf=\"page === mainListComponentsEnum.Rewards\">\n        <ng-container *ngIf=\"!waitingLoading; else skeletonRewardsDesktop\">\n          <div class=\"row list animation-hidden-skeleton\" *ngFor=\"let item of rewardList\">\n            <div class=\"col user\">\n              <div class=\"avatar\">\n                <img [attr.src]=\"item.image\" [attr.alt]=\"item.name\" />\n              </div>\n              <h2>\n                {{ item.name }}\n              </h2>\n            </div>\n            <div class=\"col rarity\">\n              {{ item.rarity | titlecase }}\n            </div>\n            <div class=\"col category\">\n              {{ item.category | titlecase }}\n            </div>\n            <div class=\"col latest-price\" [innerHTML]=\"item.cost | followersCount\"></div>\n            <div class=\"col confectionary\">\n              <button class=\"button primary\" *ngIf=\"item.isConfectionary\" (click)=\"modalsService.openRewardPopup(item.id)\">View in confectionary</button>\n              <button class=\"button tertiary\" disabled *ngIf=\"!item.isConfectionary\">Not in confectionary</button>\n            </div>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <cake-pagination [(page)]=\"currentPage\" [pageSize]=\"pageSize\" [count]=\"totalCount\" (pageChange)=\"getData()\"></cake-pagination>\n\n    <div class=\"plugin-download\">\n      <cake-download-plugin></cake-download-plugin>\n    </div>\n  </div>\n\n  <div class=\"mobile-container\">\n    <div class=\"header\">\n      <span\n        >Total: <span class=\"total-count\">{{ totalCount | number }}</span></span\n      >\n      <div class=\"sort-block\">\n        <h3>Sort by</h3>\n        <div class=\"sort\">\n          <cake-drop-down placeholder=\"Select\" [options]=\"sortOptions\" (chooseOption)=\"sort($event)\"> </cake-drop-down>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"!waitingLoading; else skeletonMobile\">\n      <ng-container *ngIf=\"page === mainListComponentsEnum.Rewards\">\n        <div class=\"rewards-list animation-hidden-skeleton\">\n          <div class=\"reward-container\" *ngFor=\"let reward of rewardList\">\n            <div class=\"reward-main-info\">\n              <div class=\"reward-image\">\n                <img class=\"small-image\" [attr.src]=\"reward.image\" [attr.alt]=\"reward.name\" />\n              </div>\n              <div class=\"reward-detail\">\n                <div class=\"reward-info\">\n                  <p class=\"reward-info-type\">{{ reward.type }}</p>\n                  <p class=\"reward-info-name\">{{ reward.name }}</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"reward-details-btn pointer\" [cakeRewardsOptions]=\"reward\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"20\" viewBox=\"0 0 6 20\" fill=\"none\">\n                <path\n                  d=\"M5.25 17.5C5.25 18.0967 5.01295 18.669 4.59099 19.091C4.16903 19.5129 3.59674 19.75 3 19.75C2.40326 19.75 1.83097 19.5129 1.40901 19.091C0.987053 18.669 0.75 18.0967 0.75 17.5C0.75 16.9033 0.987053 16.331 1.40901 15.909C1.83097 15.4871 2.40326 15.25 3 15.25C3.59674 15.25 4.16903 15.4871 4.59099 15.909C5.01295 16.331 5.25 16.9033 5.25 17.5ZM5.25 10C5.25 10.5967 5.01295 11.169 4.59099 11.591C4.16903 12.0129 3.59674 12.25 3 12.25C2.40326 12.25 1.83097 12.0129 1.40901 11.591C0.987053 11.169 0.75 10.5967 0.75 10C0.75 9.40326 0.987053 8.83097 1.40901 8.40901C1.83097 7.98705 2.40326 7.75 3 7.75C3.59674 7.75 4.16903 7.98705 4.59099 8.40901C5.01295 8.83097 5.25 9.40326 5.25 10ZM5.25 2.5C5.25 3.09674 5.01295 3.66903 4.59099 4.09099C4.16903 4.51295 3.59674 4.75 3 4.75C2.40326 4.75 1.83097 4.51295 1.40901 4.09099C0.987053 3.66903 0.75 3.09674 0.75 2.5C0.75 1.90326 0.987053 1.33097 1.40901 0.90901C1.83097 0.487053 2.40326 0.25 3 0.25C3.59674 0.25 4.16903 0.487053 4.59099 0.90901C5.01295 1.33097 5.25 1.90326 5.25 2.5Z\"\n                  fill=\"url(#paint0_linear_1447_111094)\"\n                />\n                <defs>\n                  <linearGradient\n                    id=\"paint0_linear_1447_111094\"\n                    x1=\"0.869403\"\n                    y1=\"0.25\"\n                    x2=\"6.0908\"\n                    y2=\"0.831504\"\n                    gradientUnits=\"userSpaceOnUse\"\n                  >\n                    <stop stop-color=\"#2BDFB4\" />\n                    <stop offset=\"1\" stop-color=\"#29ADDF\" />\n                  </linearGradient>\n                </defs>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"page === mainListComponentsEnum.Grab\">\n        <div class=\"grab-list animation-hidden-skeleton\">\n          <div class=\"grab-container\" *ngFor=\"let kol of kolList\">\n            <div class=\"grab-main-info\" (click)=\"modalsService.openKolPopup(kol)\">\n              <div class=\"grab-image\">\n                <img class=\"small-image\" [attr.src]=\"kol.user.avatar || profileImg\" [attr.alt]=\"kol.user.username\" />\n                \n              </div>\n              <div class=\"grab-name\">\n                <span>{{ kol.user.username }}</span>\n              </div>\n            </div>\n            <div class=\"subscribe-btn\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\">\n              <button class=\"button primary\" *ngIf=\"!kol.user.isFollow\" (click)=\"follow(kol.user.id)\" [disabled]=\"userId === kol.user.id\">\n                Follow\n              </button>\n              <button\n                class=\"button secondary unfollow with-icon\"\n                *ngIf=\"kol.user.isFollow\"\n                (click)=\"unfollow(kol.user.id)\"\n                [disabled]=\"userId === kol.user.id\"\n              >\n                <span class=\"isFollow\">Following</span>\n                <span class=\"isUnfollow\">Unfollow</span>\n                <span class=\"icon\"></span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n    <cake-pagination [(page)]=\"currentPage\" [pageSize]=\"pageSize\" [count]=\"totalCount\" (pageChange)=\"getData()\"></cake-pagination>\n  </div>\n</div>\n\n<ng-template #skeletonKolDesktop>\n  <div class=\"row list\" *ngFor=\"let item of getMockArray(3)\">\n    <div class=\"col user\">\n      <ng-container *ngTemplateOutlet=\"avatarSkeleton\"></ng-container>\n    </div>\n    <div class=\"col rewards\">\n      <ngx-skeleton-loader\n        count=\"3\"\n        appearance=\"circle\"\n        animation=\"progress-dark\"\n        [theme]=\"{\n          'background-color': activeTheme.properties['--skeleton-color'],\n          height: '38px',\n          width: '38px',\n          'margin-left': '-15px'\n        }\"\n      >\n      </ngx-skeleton-loader>\n    </div>\n    <div class=\"col cakeboxes\">\n      <ngx-skeleton-loader\n        count=\"3\"\n        appearance=\"line\"\n        animation=\"progress-dark\"\n        [theme]=\"{\n          'background-color': activeTheme.properties['--skeleton-color'],\n          height: '38px',\n          width: '38px',\n          'margin-left': '-15px',\n          'border-radius': '2px',\n          transform: 'rotate(45deg)'\n        }\"\n      >\n      </ngx-skeleton-loader>\n    </div>\n    <div class=\"col followers\">\n      <ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n    </div>\n    <div class=\"col platforms\">\n      <ngx-skeleton-loader\n        count=\"5\"\n        appearance=\"line\"\n        animation=\"progress-dark\"\n        [theme]=\"{\n          'background-color': activeTheme.properties['--skeleton-color'],\n          height: '40px',\n          width: '40px',\n          'border-radius': '2px',\n          'margin-left': '8px'\n        }\"\n      >\n      </ngx-skeleton-loader>\n    </div>\n    <div class=\"col follow\">\n      <ng-container *ngTemplateOutlet=\"btnSkeleton\"></ng-container>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #skeletonRewardsDesktop>\n  <div class=\"row list\" *ngFor=\"let item of getMockArray(3)\">\n    <div class=\"col user\">\n      <ng-container *ngTemplateOutlet=\"avatarSkeleton\"></ng-container>\n    </div>\n    <div class=\"col rarity\">\n      <ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n    </div>\n    <div class=\"col category\">\n      <ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n    </div>\n    <div class=\"col latest-price rankExample\">\n      <ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n    </div>\n    <div class=\"col confectionary\">\n      <ng-container *ngTemplateOutlet=\"btnSkeleton\"></ng-container>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #avatarSkeleton>\n  <ngx-skeleton-loader\n  count=\"1\"\n  appearance=\"circle\"\n  animation=\"progress-dark\"\n  [theme]=\"{\n    'background-color': activeTheme.properties['--skeleton-color'],\n    height: '64px',\n    width: '64px'\n  }\"\n>\n</ngx-skeleton-loader>\n<ngx-skeleton-loader\n  count=\"1\"\n  appearance=\"line\"\n  animation=\"progress-dark\"\n  [theme]=\"{\n    'background-color': activeTheme.properties['--skeleton-color'],\n    height: '17px',\n    width: '100px',\n    'border-radius': '2px',\n    margin: '0 0 0 20px'\n  }\"\n>\n</ngx-skeleton-loader>\n</ng-template>\n\n<ng-template #textSkeleton>\n  <ngx-skeleton-loader\n        count=\"1\"\n        appearance=\"line\"\n        animation=\"progress-dark\"\n        [theme]=\"{\n          'background-color': activeTheme.properties['--skeleton-color'],\n          height: '22px',\n          width: '50px',\n          'border-radius': '2px'\n        }\"\n      >\n      </ngx-skeleton-loader>\n</ng-template>\n<ng-template #btnSkeleton>\n  <ngx-skeleton-loader\n        count=\"1\"\n        appearance=\"line\"\n        animation=\"progress-dark\"\n        [theme]=\"{\n          'background-color': activeTheme.properties['--skeleton-color'],\n          height: '40px',\n          width: '120px',\n          'border-radius': '16px',\n          'margin-left': '8px'\n        }\"\n      >\n      </ngx-skeleton-loader>\n</ng-template>\n\n\n<ng-template #skeletonMobile>\n  <div class=\"grab-list\">\n    <div class=\"grab-container\" *ngFor=\"let item of getMockArray(5)\">\n      <div class=\"grab-main-info\">\n        <div class=\"grab-image\">\n          <ngx-skeleton-loader\n            count=\"1\"\n            appearance=\"circle\"\n            animation=\"progress-dark\"\n            [theme]=\"{\n              'background-color': activeTheme.properties['--skeleton-color'],\n              height: '32px',\n              width: '32px'\n            }\"\n          >\n          </ngx-skeleton-loader>\n        </div>\n        <div class=\"grab-name\" >\n          <ngx-skeleton-loader\n            count=\"1\"\n            appearance=\"line\"\n            animation=\"progress-dark\"\n            [theme]=\"{\n              'background-color': activeTheme.properties['--skeleton-color'],\n              height: '14px',\n              width: '90px',\n              'margin': 0,\n              'margin-top': '12px'\n            }\"\n          >\n          </ngx-skeleton-loader>\n        </div>\n      </div>\n      <div class=\"subscribe-btn\">\n        <ngx-skeleton-loader\n            count=\"1\"\n            appearance=\"line\"\n            animation=\"progress-dark\"\n            [theme]=\"{\n              'background-color': activeTheme.properties['--skeleton-color'],\n              height: '40px',\n              width: '100px',\n              'border-radius': '16px'\n            }\"\n          >\n          </ngx-skeleton-loader>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainListRoutingModule } from './main-list-routing.module';\nimport { MainListComponent } from './main-list.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [MainListComponent],\n  imports: [CommonModule, MainListRoutingModule, SharedModule],\n})\nexport class MainListModule {}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}