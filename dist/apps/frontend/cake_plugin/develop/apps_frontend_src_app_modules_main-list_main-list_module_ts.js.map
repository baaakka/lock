{"version":3,"file":"apps_frontend_src_app_modules_main-list_main-list_module_ts.js","mappings":"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","sources":["./apps/frontend/src/app/core/constants/sorting-options.ts","./apps/frontend/src/app/core/constants/tabs-from-list.enum.ts","./apps/frontend/src/app/modules/main-list/main-list-routing.module.ts","./apps/frontend/src/app/modules/main-list/main-list.component.ts","./apps/frontend/src/app/modules/main-list/main-list.component.html","./apps/frontend/src/app/modules/main-list/main-list.module.ts"],"sourcesContent":["import { SortRewardEum, SortUserEum } from \"@cake/lib-api-interface\";\nimport { DropDownOption } from \"../types/drop-down-option.interface\";\n\nexport const kolSortOptions: Array<DropDownOption> = [\n    {\n        value: SortUserEum.Reward,\n        label: 'Rewards'\n    },\n    {\n        value: SortUserEum.Cakebox,\n        label: 'Cakeboxes'\n    },\n    {\n        value: SortUserEum.FollowedByIDs,\n        label: 'Followers'\n    },\n    {\n        value: SortUserEum.Rank,\n        label: 'Rank'\n    },\n    {\n        value: SortUserEum.CreatedAt,\n        label: 'Time in Cak3'\n    },\n    {\n        value: SortUserEum.Role,\n        label: 'Role'\n    },\n]\n\nexport const rewardsSortOptions: Array<DropDownOption> = [\n    {\n        value: SortRewardEum.Cost,\n        label: 'Latest price'\n    },\n    // {\n    //     value: 'hype',\n    //     label: 'Hype'\n    // },\n    // {\n    //     value: 'quality',\n    //     label: 'Quality'\n    // },\n    // {\n    //     value: 'engagement',\n    //     label: 'Engagement'\n    // },\n    {\n        value: SortRewardEum.Rarity,\n        label: 'Rarity'\n    },\n    {\n        value: SortRewardEum.Category,\n        label: 'Category'\n    },\n]","export enum TabsFromListEnum {\n  Kol = 'kol',\n  Brands = 'brands',\n  Events = 'events',\n  Projects = 'projects',\n  Users = 'users',\n  Slices = 'slices',\n  Cak3boxes = 'cak3boxes',\n  Trends = 'trends',\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainListComponent } from './main-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainListComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainListRoutingModule { }\n","/* eslint-disable @nrwl/nx/enforce-module-boundaries */\nimport { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Data, NavigationEnd, Router } from '@angular/router';\nimport { SortRewardEum, SortUserEum } from '@cake/lib-api-interface';\nimport { KolItem, RewardItem } from 'libs/lib-api-interface/src/lib/response';\nimport { BehaviorSubject, debounceTime, takeUntil } from 'rxjs';\nimport { MainListComponentsEnum } from '../../core/constants/main-list-components.enum';\nimport { kolSortOptions, rewardsSortOptions } from '../../core/constants/sorting-options';\nimport { TabsFromListEnum } from '../../core/constants/tabs-from-list.enum';\nimport { DropDownOption } from '../../core/types/drop-down-option.interface';\nimport { Pagination } from '../../core/types/pagination.interface';\nimport { Query } from '../../core/types/query.interface';\nimport { Theme } from '../../core/types/Themes';\nimport { ApiService } from '../../services/api.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ModalsService } from '../../services/modals.service';\nimport { RewardService } from '../../services/reward.service';\nimport { SearchService } from '../../services/search.service';\nimport { ThemeService } from '../../services/theme.service';\nimport { Watcher } from '../../shared/classes/watcher';\n\n@Component({\n  selector: 'cake-main-list',\n  templateUrl: './main-list.component.html',\n  styleUrls: ['./main-list.component.scss'],\n})\nexport class MainListComponent extends Watcher implements OnInit, OnDestroy {\n\n  MOCK_FOLLOWERS = [123000, 1000, 500, 45000, 2500000];\n\n  searchControl = new FormControl('');\n\n  activeTab: TabsFromListEnum = TabsFromListEnum.Kol;\n\n  tabsFromListEnum = TabsFromListEnum;\n\n  mainListComponentsEnum = MainListComponentsEnum;\n\n  waitingLoading = true;\n\n  where = '';\n\n  sortValue = '';\n\n  width = 0;   \n\n  currentPage = 1;\n\n  pageSize = window.innerWidth <= 768 ? 10 : 5;\n\n  totalCount!: number\n\n  page!: MainListComponentsEnum;\n\n  rewardList: Array<RewardItem> = [];\n\n  kolList: Array<KolItem> = [];\n\n  kolSortOptions: Array<DropDownOption> = kolSortOptions;\n\n  rewardsSortOptions: Array<DropDownOption> = rewardsSortOptions;\n\n  resize$ = new BehaviorSubject<number>(window.innerWidth);\n\n  smallScreen!: boolean;\n\n  hasMatches = true;\n    \n  get sortOptions(): Array<DropDownOption> {\n    return this.page === this.mainListComponentsEnum.Rewards ? this.rewardsSortOptions : this.kolSortOptions;\n  }\n\n  get getQueryObj(): Query {\n    return {\n      page: this.currentPage,\n      pageSize: this.pageSize,\n      sort: this.sortValue,\n      search: this.searchControl.value || '',\n      owner: this.smallScreen,\n      ...(!this.smallScreen ? {where: this.where}: {})\n    };\n  }\n\n  get userId(): string {\n    return this.authService.getDecodedToken()?.data.id || '';\n  }\n\n  \n  public get profileImg() : string {\n    return this.authService.randomAvatar;\n  }\n\n\n  activityImg(index:number){\n    return`assets/icons/activity${ (Math.floor(Math.random() * 5))}.svg` ;\n  }\n\n  rankImg(index:number){\n    return `assets/icons/top${(Math.floor(Math.random() * 5))}.svg`;\n  }\n\n  hypeImg(index:number){\n    return `assets/icons/hype${(Math.floor(Math.random() * 5))}.svg`;\n  }\n  \n  \n  public get activeTheme() : Theme {\n    return this.themeService.active;\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    if ((this.width !== window.innerWidth)) {\n      this.width = window.innerWidth;\n      this.resize$.next(window.innerWidth)\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private authService: AuthService,\n    public modalsService: ModalsService,\n    private themeService: ThemeService,\n    private rewardService: RewardService\n\n  ) {\n    super();\n    this.searchService.setFormControl(this.searchControl);\n  }\n\n  getCostColor(value: number): string {\n    return this.themeService.getClassForColors(value);\n  }\n\n  ngOnInit(): void {\n    this.activeTab = this.route.snapshot.paramMap.get('id') as TabsFromListEnum;\n    this.where = this.activeTab;\n    this.resize$.next(window.innerWidth)\n    this.checkDataFromRouter();\n    this.triggerTabs();\n    this.resizeChecker();\n    this.searching();\n    this.toConfectionaryChecker();\n  }\n\n  toConfectionaryChecker() {\n      this.rewardService.toConfectionaryTrigger.pipe(takeUntil(this.unsubscribe)).subscribe(() => {\n        this.getData();\n      })\n  };\n\n  resizeChecker() {\n    this.resize$.pipe(debounceTime(250)).subscribe(width => {\n        this.smallScreen = width <= 768;\n        this.getData();\n    })\n  }\n\n  getMockArray(number: number) {\n    return Array(number);\n  }\n\n  getNameBasedOnTab(): string {\n    switch (this.activeTab) {\n      case TabsFromListEnum.Kol:\n        return 'User name';\n      case TabsFromListEnum.Users:\n        return 'User name';\n      case TabsFromListEnum.Slices:\n        return 'Slice name';\n      case TabsFromListEnum.Cak3boxes:\n        return 'Cak3boxes name';\n      case TabsFromListEnum.Trends:\n        return 'Item name';\n    }\n    return 'Name';\n  }\n\n  searching() {\n    this.searchControl.valueChanges\n      .pipe(takeUntil(this.unsubscribe), debounceTime(500))\n      .subscribe(() => {\n        this.currentPage = 1;\n        this.getData()\n      });\n  }\n\n  checkDataFromRouter() {\n    this.route.data\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe((resolved: Data) => {\n        this.page = resolved['page'];\n        this.getData();\n      });\n  }\n\n  setPagination(res: Pagination<unknown>) {\n    this.totalCount = res.count;\n    this.currentPage = res.page;\n    this.pageSize = res.pageSize;\n    this.waitingLoading = false;    \n  }\n\n  getData() {\n    this.hasMatches = true;\n    this.waitingLoading = true;\n    if (this.page === MainListComponentsEnum.Grab) {\n      this.sortValue = this.sortValue || SortUserEum.CreatedAt;\n      this.apiService\n        .getUsers(this.getQueryObj)\n        .pipe(takeUntil(this.unsubscribe))\n        .subscribe((res) => {\n          this.hasMatches = !(!res.data.length && this.getQueryObj.search?.length)\n          this.kolList = res.data;\n          this.setPagination(res);\n\n        });\n    } else {\n      this.sortValue = this.sortValue || SortRewardEum.Cost;\n      this.apiService\n        .getRewards(this.getQueryObj)\n        .pipe(takeUntil(this.unsubscribe))\n        .subscribe((res) => {\n          this.hasMatches = !(!res.data.length && this.getQueryObj.search?.length)\n          this.rewardList = res.data;\n          this.setPagination(res);\n        });\n    }\n  }\n\n  triggerTabs() {\n    this.router.events.subscribe((val) => {\n      if (val instanceof NavigationEnd) {\n        this.activeTab = val.url.split('/')[\n          val.url.split('/').length - 1\n        ] as TabsFromListEnum;\n        if (!Object.values(MainListComponentsEnum).includes(this.activeTab as unknown as MainListComponentsEnum)) {\n          this.where = this.activeTab;\n        }\n        this.currentPage = 1;\n        this.checkDataFromRouter();\n      }\n    });\n  }\n\n  sort(option: DropDownOption) {\n    this.sortValue = option.value;\n    this.getData();\n  }\n\n  notAllowedTabs(tabs: TabsFromListEnum[]): boolean {\n    return !tabs.includes(this.activeTab);\n  }\n\n  follow(id: string) {\n    this.apiService.follow(id).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n      this.kolList = this.kolList.map(kol => kol.user.id === id ? {...kol, ...{user: {...kol.user, isFollow: true}, followers: kol.followers + 1}} : kol)\n    })\n  }\n\n  unfollow(id: string) {\n    this.apiService.unfollow(id).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n      this.kolList = this.kolList.map(kol => kol.user.id === id ? {...kol, ...{user: {...kol.user, isFollow: false}, followers: kol.followers - 1}} : kol)\n    })\n  }\n\n\n\n  override ngOnDestroy(): void {\n    //  this.urlService.unsubscribeObsv()\n\n    super.ngOnDestroy();\n  }\n\n}\n","<div class=\"content\">\n\t<div class=\"desktop-container\">\n\t\t<div class=\"title\">\n\t\t\t<h1>\n\t\t\t\t{{ page === mainListComponentsEnum.Grab ? \"Grab a slice!\" : \"Rewards\" }}\n\t\t\t</h1>\n\t\t\t<img loading=\"lazy\" *ngIf=\"page === mainListComponentsEnum.Grab\" src=\"assets/imgs/victory-hand-skin.png\" alt=\"victory hand\" />\n\t\t\t<img loading=\"lazy\" *ngIf=\"page === mainListComponentsEnum.Rewards\" src=\"assets/imgs/growing-heart.png\" alt=\"heart\" />\n\t\t</div>\n\n\t\t<div class=\"header-of-table\">\n\t\t\t<div class=\"header-flex max-content\">\n\t\t\t\t<div class=\"tabs\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n\t\t\t\t\t<a routerLink=\"/rewards/SLICE\" routerLinkActive=\"active\">Slices</a>\n\t\t\t\t\t<a routerLink=\"/rewards/CAKEBOX\" routerLinkActive=\"active\">Cak3boxes</a>\n\t\t\t\t\t<a routerLink=\"/rewards/TREND\" routerLinkActive=\"active\">Trends</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"tabs\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t\t<a routerLink=\"/grab-a-slice/KOL\" routerLinkActive=\"active\">Key opinion leader</a>\n\t\t\t\t\t<!-- <a routerLink=\"/grab-a-slice/brands\" routerLinkActive=\"active\">Brands</a>\n                  <a routerLink=\"/grab-a-slice/events\" routerLinkActive=\"active\">Events</a>\n                  <a routerLink=\"/grab-a-slice/projects\" routerLinkActive=\"active\">Projects</a> -->\n\t\t\t\t\t<a routerLink=\"/grab-a-slice/USER\" routerLinkActive=\"active\">Users</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"last-content\">\n\t\t\t\t\t<div class=\"sort-block\">\n\t\t\t\t\t\t<h3>Sort by</h3>\n\t\t\t\t\t\t<div class=\"sort\">\n\t\t\t\t\t\t\t<cake-drop-down\n\t\t\t\t\t\t\t\tplaceholder=\"Select\"\n\t\t\t\t\t\t\t\t[options]=\"page === mainListComponentsEnum.Grab ? kolSortOptions : rewardsSortOptions\"\n\t\t\t\t\t\t\t\t(chooseOption)=\"sort($event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</cake-drop-down>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"search-block\">\n\t\t\t\t\t\t<cake-input id=\"search-input\" placeholder=\"Search\" [control]=\"searchControl\">\n\t\t\t\t\t\t\t<mat-icon svgIcon=\"search-outline\"></mat-icon>\n\t\t\t\t\t\t</cake-input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"list-block max-content\" *ngIf=\"hasMatches; else notFound\">\n\t\t\t<div class=\"row header\">\n\t\t\t\t<div class=\"col user\">\n\t\t\t\t\t{{ getNameBasedOnTab() }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col rarity\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n\t\t\t\t\tRarity\n\t\t\t\t\t<!-- <img\n            src=\"assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"\n              'Cosmetics, slices, sugar have rarity'\n            \"\n          /> -->\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col category\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n\t\t\t\t\tCategory\n\t\t\t\t\t<!-- <img\n            src=\"assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"\n              'Cosmetics, slices, sugar have rarity'\n            \"\n          /> -->\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col latest-price\" *ngIf=\"page === mainListComponentsEnum.Rewards\">\n\t\t\t\t\tLatest price\n\t\t\t\t\t<!-- <img\n            loading=\"lazy\"\n            src=\"assets/icons/question.svg\"\n            alt=\"\"\n            class=\"question-icon\"\n            [cakeTooltip]=\"'The latest cost of slices/cakeboxes'\"\n          />-->\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col rewards\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tRewards\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Are cosmetics, slices, sugar that user can get for doing a given task.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col cakeboxes\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tCakeboxes\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Are boxes, that can contain cosmetics, slices or sugar.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col activity\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tActivity\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Are boxes, that can contain cosmetics, slices or sugar.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col rank\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tRank\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Are boxes, that can contain cosmetics, slices or sugar.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col hype\" *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tHype\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Are boxes, that can contain cosmetics, slices or sugar.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col followers\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users]) && page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tFollowers\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Quantity of users that following KOL/Brand/Project.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col platforms\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users]) && page === mainListComponentsEnum.Grab\">\n\t\t\t\t\tPlatforms\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tsrc=\"assets/icons/question.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclass=\"question-icon\"\n\t\t\t\t\t\t[cakeTooltip]=\"'Quantity of media platforms connected to cak3 plugin.'\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"col\"\n\t\t\t\t\t[ngClass]=\"page === mainListComponentsEnum.Grab ? 'follow' : 'confectionary'\"\n\t\t\t\t\t*ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\"\n\t\t\t\t>\n\t\t\t\t\t{{ page === mainListComponentsEnum.Grab ? \"Follow\" : \"Confectionary\" }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ng-container *ngIf=\"page === mainListComponentsEnum.Grab\">\n\t\t\t\t<ng-container *ngIf=\"!waitingLoading; else skeletonKolDesktop\">\n\t\t\t\t\t<div class=\"row list animation-hidden-skeleton\" *ngFor=\"let item of kolList; let index = index\">\n\t\t\t\t\t\t<div class=\"col user\" (click)=\"modalsService.openKolPopup(item)\">\n\t\t\t\t\t\t\t<div class=\"avatar\">\n\t\t\t\t\t\t\t\t<img loading=\"lazy\" [attr.src]=\"item.user.avatar || profileImg\" [attr.alt]=\"item.user.username\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{{ item.user.username }}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col rewards\">\n\t\t\t\t\t\t\t<div class=\"slices\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\t\t\t\talt=\"{{ reward.name }}\"\n\t\t\t\t\t\t\t\t\t[attr.src]=\"reward.smallImage || reward.image\"\n\t\t\t\t\t\t\t\t\t*ngFor=\"let reward of item.rewards | slice: 0:3; let i = index\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"count\">{{ item.rewards.length > 3 ? \"+\" : \"\" }}{{ item.rewards.length > 3 ? item.rewards.length - 3 : \"\" }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col cakeboxes\">\n\t\t\t\t\t\t\t<div class=\"cakebox\" *ngFor=\"let cakebox of item.cakeboxes | slice: 0:3; let i = index\">\n\t\t\t\t\t\t\t\t<cake-cakebox [isSmall]=\"true\" [cakebox]=\"cakebox\"></cake-cakebox>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"count\">\n\t\t\t\t\t\t\t\t{{ item.cakeboxes.length > 3 ? \"+\" : \"\" }}{{ item.cakeboxes.length > 3 ? item.cakeboxes.length - 3 : \"\" }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col activity\">\n\t\t\t\t\t\t\t<img src=\"{{activityImg(index)}}\" class=\"activity-img\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col rank\">\n\t\t\t\t\t\t\t<img src=\"{{rankImg(index)}}\" class=\"rank-img\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col hype\">\n\t\t\t\t\t\t\t<img src=\"{{hypeImg(index)}}\" class=\"hype-img\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass=\"col followers rankExample\"\n\t\t\t\t\t\t\t*ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\"\n\t\t\t\t\t\t\t[innerHTML]=\"MOCK_FOLLOWERS[index] | followersCount\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<!-- MOCK FOR MVP1 -->\n\t\t\t\t\t\t\t<!-- <div class=\"col followers rankExample\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\" [innerHTML]=\"item.followers | followersCount\"> -->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col platforms\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\">\n\t\t\t\t\t\t\t<a class=\"platform pointer\" *ngFor=\"let platform of item.platforms | slice: 0:5; let i = index\" target=\"_blank\" [attr.href]=\"platform.link\">\n\t\t\t\t\t\t\t\t<img loading=\"lazy\" src=\"assets/icons/popular-fire.png\" alt=\"popular\" class=\"popular\" *ngIf=\"platform.isPopular\" />\n\t\t\t\t\t\t\t\t<img loading=\"lazy\" src=\"assets/platforms/{{ platform.platform }}-small.svg\" alt=\"\" class=\"platform-icon\" />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<div class=\"count\">\n\t\t\t\t\t\t\t\t{{ item.platforms.length > 5 ? \"+\" : \"\" }}{{ item.platforms.length > 5 ? item.platforms.length - 5 : \"\" }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col follow\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users])\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"button primary\"\n\t\t\t\t\t\t\t\t*ngIf=\"!item.user.isFollow && userId !== item.user.id\"\n\t\t\t\t\t\t\t\t(click)=\"follow(item.user.id)\"\n\t\t\t\t\t\t\t\t[disabled]=\"userId === item.user.id\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFollow\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"button secondary unfollow with-icon\"\n\t\t\t\t\t\t\t\t*ngIf=\"item.user.isFollow && userId !== item.user.id\"\n\t\t\t\t\t\t\t\t(click)=\"unfollow(item.user.id)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"isFollow\">Following</span>\n\t\t\t\t\t\t\t\t<span class=\"isUnfollow\">Unfollow</span>\n\t\t\t\t\t\t\t\t<span class=\"icon\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t\t<ng-container *ngIf=\"page === mainListComponentsEnum.Rewards\">\n\t\t\t\t<ng-container *ngIf=\"!waitingLoading; else skeletonRewardsDesktop\">\n\t\t\t\t\t<div class=\"row list animation-hidden-skeleton\" *ngFor=\"let item of rewardList\">\n\t\t\t\t\t\t<div class=\"col user\">\n\t\t\t\t\t\t\t<div class=\"avatar\">\n\t\t\t\t\t\t\t\t<img loading=\"lazy\" [attr.src]=\"item.image\" [attr.alt]=\"item.name\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{{ item.name }}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col rarity\">\n\t\t\t\t\t\t\t{{ item.rarity | titlecase }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col category\">\n\t\t\t\t\t\t\t{{ item.category | titlecase }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col latest-price\">\n\t\t\t\t\t\t\t<span [ngClass]=\"getCostColor(item.cost)\">{{ item.cost | number }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col confectionary\">\n\t\t\t\t\t\t\t<button class=\"button primary\" *ngIf=\"item.isConfectionary\" (click)=\"modalsService.openRewardPopup(item.id)\">\n\t\t\t\t\t\t\t\tView in confectionary\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button class=\"button tertiary\" disabled *ngIf=\"!item.isConfectionary\">Not in confectionary</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-container>\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<cake-pagination\n\t\t\t[(page)]=\"currentPage\"\n\t\t\t[pageSize]=\"pageSize\"\n\t\t\t[count]=\"totalCount\"\n\t\t\t(pageChange)=\"getData()\"\n\t\t\tclass=\"max-content\"\n\t\t></cake-pagination>\n\n\t\t<div class=\"plugin-download max-content\">\n\t\t\t<cake-download-plugin></cake-download-plugin>\n\t\t</div>\n\t</div>\n\n\t<div class=\"mobile-container\">\n    <ng-container *ngIf=\"hasMatches; else notFound\">\n      <div class=\"header\">\n        <span\n          >Total: <span class=\"total-count\">{{ totalCount | number }}</span></span\n        >\n        <div class=\"sort-block\">\n          <h3>Sort by</h3>\n          <div class=\"sort\">\n            <cake-drop-down placeholder=\"Select\" [options]=\"sortOptions\" (chooseOption)=\"sort($event)\"> </cake-drop-down>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf=\"!waitingLoading; else skeletonMobile\">\n        <ng-container *ngIf=\"page === mainListComponentsEnum.Rewards\">\n          <div class=\"rewards-list animation-hidden-skeleton\">\n            <div class=\"reward-container\" *ngFor=\"let reward of rewardList\">\n              <div class=\"reward-main-info\">\n                <div class=\"reward-image\">\n                  <img loading=\"lazy\" class=\"small-image\" [attr.src]=\"reward.image\" [attr.alt]=\"reward.name\" />\n                </div>\n                <div class=\"reward-detail\">\n                  <div class=\"reward-info\">\n                    <p class=\"reward-info-type\">{{ reward.type.toLowerCase().replace(\"cake\", \"cak3\") | titlecase }}</p>\n                    <p class=\"reward-info-name\">{{ reward.name }}</p>\n                  </div>\n                </div>\n              </div>\n              <div class=\"reward-details-btn pointer\" [cakeRewardsOptions]=\"reward\">\n                <mat-icon svgIcon=\"details\"></mat-icon>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"page === mainListComponentsEnum.Grab\">\n          <div class=\"grab-list animation-hidden-skeleton\">\n            <div class=\"grab-container\" *ngFor=\"let kol of kolList\">\n              <div class=\"grab-main-info\" (click)=\"modalsService.openKolPopup(kol)\">\n                <div class=\"grab-image\">\n                  <img loading=\"lazy\" class=\"small-image\" [attr.src]=\"kol.user.avatar || profileImg\" [attr.alt]=\"kol.user.username\" />\n                </div>\n                <div class=\"grab-name\">\n                  <span>{{ kol.user.username }}</span>\n                </div>\n              </div>\n              <div class=\"subscribe-btn\" *ngIf=\"notAllowedTabs([tabsFromListEnum.Users]) && userId !== kol.user.id\">\n                <button class=\"button primary\" *ngIf=\"!kol.user.isFollow\" (click)=\"follow(kol.user.id)\" [disabled]=\"userId === kol.user.id\">\n                  Follow\n                </button>\n                <button\n                  class=\"button secondary unfollow with-icon\"\n                  *ngIf=\"kol.user.isFollow\"\n                  (click)=\"unfollow(kol.user.id)\"\n                  [disabled]=\"userId === kol.user.id\"\n                >\n                  <span class=\"isFollow\">Following</span>\n                  <span class=\"isUnfollow\">Unfollow</span>\n                  <span class=\"icon\"></span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </ng-container>\n      <cake-pagination [(page)]=\"currentPage\" [pageSize]=\"pageSize\" [count]=\"totalCount\" (pageChange)=\"getData()\"></cake-pagination>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #notFound>\n  <div class=\"not-found-matches-block\">\n    <h1>\n      Sorry, we couldn’t find any matches for <span>{{getQueryObj.search}}</span>\n    </h1>\n  </div>\n</ng-template>\n<ng-template #skeletonKolDesktop>\n\t<div class=\"row list\" *ngFor=\"let item of getMockArray(5)\">\n\t\t<div class=\"col user\">\n\t\t\t<ng-container *ngTemplateOutlet=\"avatarSkeleton\"></ng-container>\n\t\t</div>\n\t\t<div class=\"col rewards\">\n\t\t\t<ngx-skeleton-loader\n\t\t\t\tcount=\"3\"\n\t\t\t\tappearance=\"circle\"\n\t\t\t\tanimation=\"progress-dark\"\n\t\t\t\t[theme]=\"{\n\t\t\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\t\t\theight: '38px',\n\t\t\t\t\twidth: '38px',\n\t\t\t\t\t'margin-left': '-15px'\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t</ngx-skeleton-loader>\n\t\t</div>\n\t\t<div class=\"col cakeboxes\">\n\t\t\t<ngx-skeleton-loader\n\t\t\t\tcount=\"3\"\n\t\t\t\tappearance=\"line\"\n\t\t\t\tanimation=\"progress-dark\"\n\t\t\t\t[theme]=\"{\n\t\t\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\t\t\theight: '38px',\n\t\t\t\t\twidth: '38px',\n\t\t\t\t\t'margin-left': '-15px',\n\t\t\t\t\t'border-radius': '2px',\n\t\t\t\t\ttransform: 'rotate(45deg)'\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t</ngx-skeleton-loader>\n\t\t</div>\n\t\t<div class=\"col followers\">\n\t\t\t<ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n\t\t</div>\n\t\t<div class=\"col platforms\">\n\t\t\t<ngx-skeleton-loader\n\t\t\t\tcount=\"5\"\n\t\t\t\tappearance=\"line\"\n\t\t\t\tanimation=\"progress-dark\"\n\t\t\t\t[theme]=\"{\n\t\t\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\t\t\theight: '40px',\n\t\t\t\t\twidth: '40px',\n\t\t\t\t\t'border-radius': '2px',\n\t\t\t\t\t'margin-left': '8px'\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t</ngx-skeleton-loader>\n\t\t</div>\n\t\t<div class=\"col follow\">\n\t\t\t<ng-container *ngTemplateOutlet=\"btnSkeleton\"></ng-container>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #skeletonRewardsDesktop>\n\t<div class=\"row list\" *ngFor=\"let item of getMockArray(5)\">\n\t\t<div class=\"col user\">\n\t\t\t<ng-container *ngTemplateOutlet=\"avatarSkeleton\"></ng-container>\n\t\t</div>\n\t\t<div class=\"col rarity\">\n\t\t\t<ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n\t\t</div>\n\t\t<div class=\"col category\">\n\t\t\t<ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n\t\t</div>\n\t\t<div class=\"col latest-price rankExample\">\n\t\t\t<ng-container *ngTemplateOutlet=\"textSkeleton\"></ng-container>\n\t\t</div>\n\t\t<div class=\"col confectionary\">\n\t\t\t<ng-container *ngTemplateOutlet=\"btnSkeleton\"></ng-container>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #avatarSkeleton>\n\t<ngx-skeleton-loader\n\t\tcount=\"1\"\n\t\tappearance=\"circle\"\n\t\tanimation=\"progress-dark\"\n\t\t[theme]=\"{\n\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\theight: '64px',\n\t\t\twidth: '64px'\n\t\t}\"\n\t>\n\t</ngx-skeleton-loader>\n\t<ngx-skeleton-loader\n\t\tcount=\"1\"\n\t\tappearance=\"line\"\n\t\tanimation=\"progress-dark\"\n\t\t[theme]=\"{\n\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\theight: '17px',\n\t\t\twidth: '100px',\n\t\t\t'border-radius': '2px',\n\t\t\tmargin: '0 0 0 20px'\n\t\t}\"\n\t>\n\t</ngx-skeleton-loader>\n</ng-template>\n\n<ng-template #textSkeleton>\n\t<ngx-skeleton-loader\n\t\tcount=\"1\"\n\t\tappearance=\"line\"\n\t\tanimation=\"progress-dark\"\n\t\t[theme]=\"{\n\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\theight: '22px',\n\t\t\twidth: '50px',\n\t\t\t'border-radius': '2px'\n\t\t}\"\n\t>\n\t</ngx-skeleton-loader>\n</ng-template>\n<ng-template #btnSkeleton>\n\t<ngx-skeleton-loader\n\t\tcount=\"1\"\n\t\tappearance=\"line\"\n\t\tanimation=\"progress-dark\"\n\t\t[theme]=\"{\n\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\theight: '40px',\n\t\t\twidth: '120px',\n\t\t\t'border-radius': '16px',\n\t\t\t'margin-left': '8px'\n\t\t}\"\n\t>\n\t</ngx-skeleton-loader>\n</ng-template>\n\n<ng-template #skeletonMobile>\n\t<div class=\"grab-list\">\n\t\t<div class=\"grab-container\" *ngFor=\"let item of getMockArray(5)\">\n\t\t\t<div class=\"grab-main-info\">\n\t\t\t\t<div class=\"grab-image\">\n\t\t\t\t\t<ngx-skeleton-loader\n\t\t\t\t\t\tcount=\"1\"\n\t\t\t\t\t\tappearance=\"circle\"\n\t\t\t\t\t\tanimation=\"progress-dark\"\n\t\t\t\t\t\t[theme]=\"{\n\t\t\t\t\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\t\t\t\t\theight: '32px',\n\t\t\t\t\t\t\twidth: '32px'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t>\n\t\t\t\t\t</ngx-skeleton-loader>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"grab-name\">\n\t\t\t\t\t<ngx-skeleton-loader\n\t\t\t\t\t\tcount=\"1\"\n\t\t\t\t\t\tappearance=\"line\"\n\t\t\t\t\t\tanimation=\"progress-dark\"\n\t\t\t\t\t\t[theme]=\"{\n\t\t\t\t\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\t\t\t\t\theight: '14px',\n\t\t\t\t\t\t\twidth: '90px',\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t'margin-top': '12px'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t>\n\t\t\t\t\t</ngx-skeleton-loader>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"subscribe-btn\">\n\t\t\t\t<ngx-skeleton-loader\n\t\t\t\t\tcount=\"1\"\n\t\t\t\t\tappearance=\"line\"\n\t\t\t\t\tanimation=\"progress-dark\"\n\t\t\t\t\t[theme]=\"{\n\t\t\t\t\t\t'background-color': activeTheme.properties['--skeleton-color'],\n\t\t\t\t\t\theight: '40px',\n\t\t\t\t\t\twidth: '100px',\n\t\t\t\t\t\t'border-radius': '16px'\n\t\t\t\t\t}\"\n\t\t\t\t>\n\t\t\t\t</ngx-skeleton-loader>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainListRoutingModule } from './main-list-routing.module';\nimport { MainListComponent } from './main-list.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [MainListComponent],\n  imports: [CommonModule, MainListRoutingModule, SharedModule],\n})\nexport class MainListModule {}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}