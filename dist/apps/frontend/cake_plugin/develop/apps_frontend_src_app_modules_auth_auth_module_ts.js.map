{"version":3,"file":"apps_frontend_src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./apps/frontend/src/app/core/guards/redirect.guard.ts","./apps/frontend/src/app/modules/auth/auth-routing.module.ts","./apps/frontend/src/app/modules/auth/auth.module.ts","./apps/frontend/src/app/modules/auth/components/sign-in/sign-in.component.ts","./apps/frontend/src/app/modules/auth/components/sign-in/sign-in.component.html","./apps/frontend/src/app/modules/auth/components/sign-up/sign-up.component.ts","./apps/frontend/src/app/modules/auth/components/sign-up/sign-up.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RedirectGuard implements CanActivate {\n\n  constructor(private router: Router ){}\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    localStorage.setItem('authToken', route.queryParams['token']);\n\n    this.router.navigate([route.queryParams['path']])\n    \n   return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RedirectGuard } from '../../core/guards/redirect.guard';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\n\nconst routes: Routes = [\n  {\n    path: 'sign-up',\n    component: SignUpComponent,\n  },\n  {\n    path: 'sign-in',\n    component: SignInComponent,\n  },\n  {\n    path: 'redirect',\n    component: SignInComponent,\n    canActivate: [RedirectGuard],\n\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\n\n@NgModule({\n  declarations: [SignUpComponent, SignInComponent],\n  imports: [CommonModule, AuthRoutingModule, SharedModule],\n})\nexport class AuthModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../../../../services/api.service';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Watcher } from '../../../../shared/classes/watcher';\nimport { takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'cake-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent extends Watcher implements OnInit, OnDestroy {\n  form!: FormGroup;\n\n  waitingResponse = false;\n\n  constructor(private fb: FormBuilder, private apiService: ApiService, private authService: AuthService, private router: Router) {\n    super()\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n    })\n  }\n\n  submit() {\n    const body = {\n      ...this.form.value\n    }\n    this.waitingResponse = true;\n    this.apiService.signIn(body).pipe(takeUntil(this.unsubscribe)).subscribe((res) => {\n      this.waitingResponse = false;\n      this.authService.signIn(res);\n      this.router.navigate(['/home']);\n    }, () => {\n      this.waitingResponse = false;\n    })\n  }\n\n  getEmailError():string {\n    if(this.isError('email')) {\n      if(this.form.get('email')?.hasError('required')) {\n        return 'Email is required';\n      }\n      return 'Email is invalid'\n    } \n    return '';\n  }\n\n  isError(controlName: string) {\n    return this.form.get(controlName)?.invalid && this.form.get(controlName)?.errors && (this.form.get(controlName)?.dirty || this.form.get(controlName)?.touched)\n  }\n\n  override ngOnDestroy(): void {\n      super.ngOnDestroy();\n  }\n}\n","<div class=\"flex-block\">\n  <div class=\"logo\">\n    <img loading=\"lazy\" src=\"../../../../../assets/imgs/logo.png\" alt=\"logo\" />\n  </div>\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" *ngIf=\"form\">\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Enter email'\"\n        [control]=\"form.controls['email']\"\n        [error]=\"getEmailError()\"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Enter password'\"\n        [hasEye]=\"true\"\n        [defaultType]=\"'password'\"\n        [control]=\"form.controls['password']\"\n        [error]=\"\n          isError('password') && this.form.get('password')?.hasError('required')\n            ? 'This field is required'\n            : ''\n        \"\n      ></cake-input>\n    </div>\n    <div class=\"login-btn\">\n      <button class=\"button primary\">Log in</button>\n    </div>\n  </form>\n  <div class=\"questions-block\">\n    <div class=\"forgot-pass-block\">\n      <div class=\"text\">\n        <p>Forgot password?</p>\n      </div>\n      <div class=\"login-btn\">\n        <button class=\"button tertiary\">\n          <span>\n            Get new one\n          </span>\n        </button>\n      </div>\n    </div>\n    <div class=\"need-account-block\">\n      <div class=\"text\">\n        <p>Need an account?</p>\n      </div>\n      <div class=\"login-btn\">\n        <button class=\"button tertiary\" routerLink=\"/auth/sign-up\">\n          <span>\n            Sign up here\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n  <footer>© 2022 Cak3</footer>\n</div>\n","/* eslint-disable @nrwl/nx/enforce-module-boundaries */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../../../services/api.service';\nimport { Watcher } from '../../../../shared/classes/watcher';\nimport { takeUntil } from 'rxjs';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Role } from 'libs/lib-api-interface/src/lib/model/role';\nimport { HttpStatusCode } from '@angular/common/http';\nimport { CustomToasterService } from '../../../../services/toaster.service';\nimport { ToasterPosition } from 'apps/frontend/src/app/core/types/toaster-position';\nimport { environment } from 'apps/frontend/src/environments/environment';\n\n@Component({\n  selector: 'cake-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent extends Watcher implements OnInit, OnDestroy {\n  form!: FormGroup;\n\n  isRegisterDone = false;\n\n  environment = environment;\n\n  constructor(private fb: FormBuilder, private apiService: ApiService, private authService: AuthService, private customToasterService: CustomToasterService) {\n    super()\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      verifyPassword: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      recoveryPhase: ['', [Validators.required]],\n    }) \n  }\n\n  submit() {\n    const body = {\n      ...this.form.value,\n      ...{role: Role.kol}\n    }\n    delete body.verifyPassword;\n    this.apiService.signUp(body).pipe(takeUntil(this.unsubscribe)).subscribe((res) => {\n      this.authService.signIn(res);\n      this.isRegisterDone = true;\n    }, (err) => {\n      if(err.status === HttpStatusCode.BadRequest && err.error.code === 'P2002') {\n        this.customToasterService.showErrorToaster(ToasterPosition.topCenter, `User ${this.form.value.username} already exist`)\n      }\n    })\n  }\n\n  getEmailError():string {\n    if(this.isError('email')) {\n      if(this.form.get('email')?.hasError('required')) {\n        return 'Email is required';\n      }\n      return 'Email is invalid'\n    } \n    return '';\n  }\n\n  getPasswordError() {\n    if(this.isError('password')) {\n      if(this.form.get('password')?.hasError('required')) {\n        return 'Password is required';\n      }\n      return 'Password must be at least 6 characters long'\n    } \n    return '';\n  }\n\n  getVerifyPassError() {\n    if(this.form.get('verifyPassword')?.touched && this.form.get('verifyPassword')?.value !== this.form.get('password')?.value) {\n      return \"Passwords don't match\";\n    } \n    return '';\n  }\n\n  isError(controlName: string) {\n    return this.form.get(controlName)?.invalid && this.form.get(controlName)?.errors && (this.form.get(controlName)?.dirty || this.form.get(controlName)?.touched)\n  }\n\n  override ngOnDestroy(): void {\n      super.ngOnDestroy();\n  }\n}\n","<div class=\"flex-block\" *ngIf=\"!isRegisterDone\">\n  <div class=\"logo\">\n    <img loading=\"lazy\" src=\"../../../../../assets/imgs/logo.png\" alt=\"logo\" />\n  </div>\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" *ngIf=\"form\">\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Enter your first name'\"\n        [control]=\"form.controls['firstName']\"\n        [error]=\"\n          isError('firstName') &&\n          this.form.get('firstName')?.hasError('required')\n            ? 'This field is required'\n            : ''\n        \"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Enter your last name'\"\n        [control]=\"form.controls['lastName']\"\n        [error]=\"\n          isError('lastName') && this.form.get('lastName')?.hasError('required')\n            ? 'This field is required'\n            : ''\n        \"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Create username'\"\n        [control]=\"form.controls['username']\"\n        [error]=\"\n          isError('username') && this.form.get('username')?.hasError('required')\n            ? 'This field is required'\n            : ''\n        \"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Password'\"\n        [hasEye]=\"true\"\n        [defaultType]=\"'password'\"\n        [control]=\"form.controls['password']\"\n        [error]=\"getPasswordError()\"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Verify password'\"\n        [hasEye]=\"true\"\n        [defaultType]=\"'password'\"\n        [control]=\"form.controls['verifyPassword']\"\n        [error]=\"getVerifyPassError()\"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Enter email'\"\n        [control]=\"form.controls['email']\"\n        [error]=\"getEmailError()\"\n      ></cake-input>\n    </div>\n    <div class=\"input-block\">\n      <cake-input\n        [placeholder]=\"'Create recovery phrase'\"\n        [control]=\"form.controls['recoveryPhase']\"\n        [error]=\"\n          isError('recoveryPhase') && this.form.get('recoveryPhase')?.hasError('required')\n            ? 'This field is required'\n            : ''\n        \"\n      ></cake-input>\n    </div>\n    <div class=\"sign-up-btn\">\n      <button class=\"button primary\">Sign up</button>\n    </div>\n  </form>\n  <div class=\"cancel-block\">\n    <button class=\"button tertiary\" routerLink=\"/auth/sign-in\">Cancel</button>\n  </div>\n  <div class=\"have-account-block\">\n    <div class=\"text\">\n      <p>Already have an account?</p>\n    </div>\n    <div class=\"login-btn\">\n      <button class=\"button tertiary\" routerLink=\"/auth/sign-in\">\n        Sign in\n      </button>\n    </div>\n  </div>\n  <footer>© 2022 Cak3</footer>\n</div>\n\n<cake-congratulations-screen\n  *ngIf=\"isRegisterDone\"\n  title=\"Congratulations!\"\n  titleImg=\"../../../assets/imgs/Party-popper.png\"\n  mark=\"../../../assets/imgs/check-mark-button.png\"\n  text=\"You have successfully registered\"\n  [isNeedPlugin]=\"!environment.plugin\"\n  [router]=\"!environment.plugin ? '/grab-a-slice' : '/home'\"\n  btnText=\"Grab a slice!\"\n></cake-congratulations-screen>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}