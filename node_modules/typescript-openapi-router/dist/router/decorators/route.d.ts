/**
 * Copyright 2020 Valentin Draganescu
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ObjectType } from "../../object-type";
import { HttpMethod } from "../..";
import { DocParameter } from "../../doc/model/parameter";
import { ResponseMetadata } from "../../metadata/response-metadata";
import { AfterMiddlewareHandler, BeforeMiddlewareHandler } from "../request-handler";
export interface IMiddleware {
    before?: BeforeMiddlewareHandler[];
    after?: AfterMiddlewareHandler[];
}
export interface IRouteProps {
    method: HttpMethod;
    path: string;
    description: string;
    responses: ResponseMetadata[];
    requestBody?: ObjectType<any>;
    example?: Record<string, unknown>;
    summary?: string;
    parameters?: DocParameter[];
    security?: any[];
    middleware?: IMiddleware;
    tags?: string[];
}
export declare const Route: (props: IRouteProps) => (target: any, propertyKey: string) => void;
